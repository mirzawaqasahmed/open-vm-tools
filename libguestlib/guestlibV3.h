/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _GUESTLIBV3_H_RPCGEN
#define _GUESTLIBV3_H_RPCGEN

#include <vmxrpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct GuestLibV3StatUint32 {
	Bool valid;
	uint32 value;
};
typedef struct GuestLibV3StatUint32 GuestLibV3StatUint32;

struct GuestLibV3StatUint64 {
	Bool valid;
	uint64 value;
};
typedef struct GuestLibV3StatUint64 GuestLibV3StatUint64;
#define GUESTLIBV3_STRING_SIZE 512

struct GuestLibV3String {
	Bool valid;
	char *value;
};
typedef struct GuestLibV3String GuestLibV3String;

struct GuestLibV3ByteArray {
	Bool valid;
	struct {
		u_int value_len;
		char *value_val;
	} value;
};
typedef struct GuestLibV3ByteArray GuestLibV3ByteArray;

typedef uint32 GuestLibV3StatCount;

enum GuestLibV3TypeIds {
	GUESTLIB_TYPE_RESERVED = 0,
	GUESTLIB_CPU_RESERVATION_MHZ = 1,
	GUESTLIB_CPU_LIMIT_MHZ = 2,
	GUESTLIB_CPU_SHARES = 3,
	GUESTLIB_CPU_USED_MS = 4,
	GUESTLIB_HOST_MHZ = 5,
	GUESTLIB_MEM_RESERVATION_MB = 6,
	GUESTLIB_MEM_LIMIT_MB = 7,
	GUESTLIB_MEM_SHARES = 8,
	GUESTLIB_MEM_MAPPED_MB = 9,
	GUESTLIB_MEM_ACTIVE_MB = 10,
	GUESTLIB_MEM_OVERHEAD_MB = 11,
	GUESTLIB_MEM_BALLOONED_MB = 12,
	GUESTLIB_MEM_SWAPPED_MB = 13,
	GUESTLIB_MEM_SHARED_MB = 14,
	GUESTLIB_MEM_SHARED_SAVED_MB = 15,
	GUESTLIB_MEM_USED_MB = 16,
	GUESTLIB_ELAPSED_MS = 17,
	GUESTLIB_RESOURCE_POOL_PATH = 18,
	GUESTLIB_CPU_STOLEN_MS = 19,
	GUESTLIB_MEM_TARGET_SIZE_MB = 20,
	GUESTLIB_HOST_CPU_NUM_CORES = 21,
	GUESTLIB_HOST_CPU_USED_MS = 22,
	GUESTLIB_HOST_MEM_SWAPPED_MB = 23,
	GUESTLIB_HOST_MEM_SHARED_MB = 24,
	GUESTLIB_HOST_MEM_USED_MB = 25,
	GUESTLIB_HOST_MEM_PHYS_MB = 26,
	GUESTLIB_HOST_MEM_PHYS_FREE_MB = 27,
	GUESTLIB_HOST_MEM_KERN_OVHD_MB = 28,
	GUESTLIB_HOST_MEM_MAPPED_MB = 29,
	GUESTLIB_HOST_MEM_UNMAPPED_MB = 30,
	GUESTLIB_MEM_ZIPPED_MB = 31,
	GUESTLIB_MEM_ZIPSAVED_MB = 32,
	GUESTLIB_MEM_LLSWAPPED_MB = 33,
	GUESTLIB_MEM_SWAP_TARGET_MB = 34,
	GUESTLIB_MEM_BALLOON_TARGET_MB = 35,
	GUESTLIB_MEM_BALLOON_MAX_MB = 36,
	GUESTLIB_RESOURCE_POOL_PATH_LONG = 37,
	GUESTLIB_MAX_STATISTIC_ID = 38,
};
typedef enum GuestLibV3TypeIds GuestLibV3TypeIds;

struct GuestLibV3Stat {
	GuestLibV3TypeIds d;
	union {
		struct GuestLibV3StatUint32 cpuReservationMHz;
		struct GuestLibV3StatUint32 cpuLimitMHz;
		struct GuestLibV3StatUint32 cpuShares;
		struct GuestLibV3StatUint64 cpuUsedMs;
		struct GuestLibV3StatUint32 hostMHz;
		struct GuestLibV3StatUint32 memReservationMB;
		struct GuestLibV3StatUint32 memLimitMB;
		struct GuestLibV3StatUint32 memShares;
		struct GuestLibV3StatUint32 memMappedMB;
		struct GuestLibV3StatUint32 memActiveMB;
		struct GuestLibV3StatUint32 memOverheadMB;
		struct GuestLibV3StatUint32 memBalloonedMB;
		struct GuestLibV3StatUint32 memSwappedMB;
		struct GuestLibV3StatUint32 memSharedMB;
		struct GuestLibV3StatUint32 memSharedSavedMB;
		struct GuestLibV3StatUint32 memUsedMB;
		struct GuestLibV3StatUint64 elapsedMs;
		struct GuestLibV3String resourcePoolPath;
		struct GuestLibV3StatUint64 cpuStolenMs;
		struct GuestLibV3StatUint64 memTargetSizeMB;
		struct GuestLibV3StatUint32 hostCpuNumCores;
		struct GuestLibV3StatUint64 hostCpuUsedMs;
		struct GuestLibV3StatUint64 hostMemSwappedMB;
		struct GuestLibV3StatUint64 hostMemSharedMB;
		struct GuestLibV3StatUint64 hostMemUsedMB;
		struct GuestLibV3StatUint64 hostMemPhysMB;
		struct GuestLibV3StatUint64 hostMemPhysFreeMB;
		struct GuestLibV3StatUint64 hostMemKernOvhdMB;
		struct GuestLibV3StatUint64 hostMemMappedMB;
		struct GuestLibV3StatUint64 hostMemUnmappedMB;
		struct GuestLibV3StatUint32 memZippedMB;
		struct GuestLibV3StatUint32 memZipSavedMB;
		struct GuestLibV3StatUint32 memLLSwappedMB;
		struct GuestLibV3StatUint32 memSwapTargetMB;
		struct GuestLibV3StatUint32 memBalloonTargetMB;
		struct GuestLibV3StatUint32 memBalloonMaxMB;
		struct GuestLibV3ByteArray resourcePoolPathLong;
	} GuestLibV3Stat_u;
};
typedef struct GuestLibV3Stat GuestLibV3Stat;

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_GuestLibV3StatUint32 (XDR *, GuestLibV3StatUint32*);
extern  bool_t xdr_GuestLibV3StatUint64 (XDR *, GuestLibV3StatUint64*);
extern  bool_t xdr_GuestLibV3String (XDR *, GuestLibV3String*);
extern  bool_t xdr_GuestLibV3ByteArray (XDR *, GuestLibV3ByteArray*);
extern  bool_t xdr_GuestLibV3StatCount (XDR *, GuestLibV3StatCount*);
extern  bool_t xdr_GuestLibV3TypeIds (XDR *, GuestLibV3TypeIds*);
extern  bool_t xdr_GuestLibV3Stat (XDR *, GuestLibV3Stat*);

#else /* K&R C */
extern bool_t xdr_GuestLibV3StatUint32 ();
extern bool_t xdr_GuestLibV3StatUint64 ();
extern bool_t xdr_GuestLibV3String ();
extern bool_t xdr_GuestLibV3ByteArray ();
extern bool_t xdr_GuestLibV3StatCount ();
extern bool_t xdr_GuestLibV3TypeIds ();
extern bool_t xdr_GuestLibV3Stat ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_GUESTLIBV3_H_RPCGEN */
