/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _GUESTLIBIOCTL_H_RPCGEN
#define _GUESTLIBIOCTL_H_RPCGEN

#include <vmxrpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define VMGUESTLIB_IOCTL_COMMAND_STRING "guestlib.ioctl"
#define GUESTLIB_IOCTL_ATOMIC_UPDATE_COOKIE_LENGTH 256

enum GuestLibAtomicUpdateStatus {
	GUESTLIB_ATOMIC_UPDATE_OK_SUCCESS = 0,
	GUESTLIB_ATOMIC_UPDATE_OK_FAIL = 1,
	GUESTLIB_ATOMIC_UPDATE_EBADPARAM = 2,
	GUESTLIB_ATOMIC_UPDATE_EUNAVAILABLE = 3,
	GUESTLIB_ATOMIC_UPDATE_EUNKNOWN = 4,
};
typedef enum GuestLibAtomicUpdateStatus GuestLibAtomicUpdateStatus;

enum GuestLibIoctlId {
	GUESTLIB_IOCTL_ATOMIC_UPDATE_COOKIE = 1,
	GUESTLIB_IOCTL_MAX = 2,
};
typedef enum GuestLibIoctlId GuestLibIoctlId;

struct GuestLibIoctlAtomicUpdateCookie {
	char *src;
	char *dst;
};
typedef struct GuestLibIoctlAtomicUpdateCookie GuestLibIoctlAtomicUpdateCookie;

struct GuestLibIoctlParam {
	GuestLibIoctlId d;
	union {
		struct GuestLibIoctlAtomicUpdateCookie atomicUpdateCookie;
	} GuestLibIoctlParam_u;
};
typedef struct GuestLibIoctlParam GuestLibIoctlParam;

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_GuestLibAtomicUpdateStatus (XDR *, GuestLibAtomicUpdateStatus*);
extern  bool_t xdr_GuestLibIoctlId (XDR *, GuestLibIoctlId*);
extern  bool_t xdr_GuestLibIoctlAtomicUpdateCookie (XDR *, GuestLibIoctlAtomicUpdateCookie*);
extern  bool_t xdr_GuestLibIoctlParam (XDR *, GuestLibIoctlParam*);

#else /* K&R C */
extern bool_t xdr_GuestLibAtomicUpdateStatus ();
extern bool_t xdr_GuestLibIoctlId ();
extern bool_t xdr_GuestLibIoctlAtomicUpdateCookie ();
extern bool_t xdr_GuestLibIoctlParam ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_GUESTLIBIOCTL_H_RPCGEN */
