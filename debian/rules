#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

PWD := $(shell pwd)

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

# XXX hard-code subarch/flavor for now (same as previous behavior).
# current build scripts here don't allow multiple builds like linux-image or
# linux-modules-extra. instead of implementing it on our own, we probably
# want to hook into the debian linux-modules-extra build scheme to avoid
# duplication of work (both internally among packages containing kernel
# modules and externally with debian).
DEB_ARCH := $(shell dpkg-architecture -qDEB_BUILD_ARCH)
ifeq ($(DEB_ARCH),i386)
DEB_KSUBARCH=none
DEB_KFLAVOR=586-vyatta-virt
else
ifeq ($(DEB_ARCH),amd64)
DEB_KSUBARCH=none
DEB_KFLAVOR=amd64-vyatta
endif
endif
kbdir=debian/build/build-$(DEB_ARCH)-$(DEB_KSUBARCH)-$(DEB_KFLAVOR)

# test if we are doing a dev build, i.e., linux is in pkgs/
dev_kdir=$(PWD)/../linux-image/$(kbdir)
dev_build=$(shell test -d $(dev_kdir) && echo -n true)

# XXX simulate Build-Depends requirement.
# i.e., in the future, the build should Build-Depends on the correct version
# of the necessary kernel headers/scripts/etc. packages, in which case we
# can assume the directory will be found at a particular location. for now,
# the build host will have to be set up properly to simulate the installation
# of these packages.
host_kdir=/usr/src/linux-image/$(kbdir)
host_build=$(shell test -d $(host_kdir) && echo -n true)
vers_kdir=$(PWD)/../linux-image/debian/linux-vyatta-kbuild/$(host_kdir)

ifeq ($(dev_build),true)
export KDIR=$(shell sh -c "cd $(vers_kdir) 2>/dev/null && pwd")
else
ifeq ($(host_build),true)
export KDIR=$(host_kdir)
endif
endif

ifndef KDIR
ifneq ($(MAKECMDGOALS),clean)
$(error did not find kernel build directory)
endif
else
kmajor=$(shell sed 's/^\([^-]\+\)-.*$$/\1/' $(KDIR)/version.Debian)
klocal=$(shell cat $(KDIR)/localversion)
export KVER=$(kmajor)$(klocal)
endif

export KINCLUDE_DIR=$(KDIR)/include/
PKGDIR=$(CURDIR)/debian/open-vm-tools
MODPKG=open-vm-modules-$(KVER)

CFLAGS = -Wall -g

configure	 = ./configure
configure	+= --host=$(DEB_HOST_GNU_TYPE)
configure	+= --build=$(DEB_BUILD_GNU_TYPE)
configure	+= --prefix=/usr
configure	+= --exec-prefix=/usr
configure	+= --sbindir=/usr/sbin
configure	+= --mandir=/usr/share/man
configure	+= --sysconfdir=/etc
configure	+= --with-kernel-release=$(KVER)
configure	+= --with-linuxdir=$(KDIR)
configure	+= --without-x
configure	+= --without-procps
configure	+= --without-gtkmm
configure	+= --without-gtk2
configure	+= --without-dnet
configure	+= --without-icu
configure	+= CFLAGS="$(CFLAGS)"
configure	+= LDFLAGS="-Wl,-z,defs"

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

configure: configure.ac Makefile.am
	#chmod +x debian/autogen.sh
	#debian/autogen.sh

config.status: configure
	rm -f config.cache
	$(configure)

build: build-stamp

build-stamp:  config.status
	dh_testdir

	# Building package
	$(MAKE)

	touch build-stamp

clean: 
	dh_testdir
	dh_testroot
	rm -f build-stamp

	# Cleaning package
	[ ! -f Makefile ] || $(MAKE) distclean

	dh_clean 

install: build
	echo install
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs

	$(MAKE) DESTDIR=$(PKGDIR) install

	# Move modules to other package
	mkdir -p $(CURDIR)/debian/$(MODPKG)/lib
	mv $(PKGDIR)/lib/modules $(CURDIR)/debian/$(MODPKG)/lib
	-rmdir $(PKGDIR)/lib

	# Fix up hooks
	install -D -m 0755 debian/local/vmxnet.hook \
		$(PKGDIR)/usr/share/initramfs-tools/hooks/vmxnet
	mkdir -p $(PKGDIR)/sbin
	mv $(PKGDIR)/usr/sbin/mount.vmhgfs $(PKGDIR)/sbin/mount.vmhgfs
	-rmdir $(PKGDIR)/usr/sbin

	dh_install

# Build architecture-dependent files here.
# Special case since we build open-vm-modules-..kernel-flavor...
binary-arch: build install
	rm -f debian/files
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_install
	dh_installman
	dh_installinit --update-rcd-params='start 38 S . stop 38 0 6 .'
	dh_installdebconf	
	dh_lintian
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_makeshlibs -V
	dh_installdeb
	if [ -f "../.VYATTA_DEV_BUILD" ]; then \
		dh_gencontrol -p open-vm-tools -- -v999.dev; \
		dh_gencontrol -p $(MODPKG) -- -VKFLAVOR=$(DEB_KFLAVOR) -v999.dev; \
	else \
		dh_gencontrol -p open-vm-tools ;\
		dh_gencontrol -p $(MODPKG) -- -VKFLAVOR=$(DEB_KFLAVOR) ;\
	fi
	dh_md5sums
	dh_builddeb -p open-vm-tools 
	dh_builddeb -p $(MODPKG)

binary: binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
