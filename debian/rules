#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

PWD := $(shell pwd)

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

# XXX hard-code subarch/flavor for now (same as previous behavior).
# current build scripts here don't allow multiple builds like linux-image or
# linux-modules-extra. instead of implementing it on our own, we probably
# want to hook into the debian linux-modules-extra build scheme to avoid
# duplication of work (both internally among packages containing kernel
# modules and externally with debian).
DEB_ARCH := $(shell dpkg-architecture -qDEB_BUILD_ARCH)
ifeq ($(DEB_ARCH),i386)
DEB_KSUBARCH=none
DEB_KFLAVOR=586-vyatta
else
ifeq ($(DEB_ARCH),amd64)
DEB_KSUBARCH=none
DEB_KFLAVOR=amd64-vyatta
endif
endif
kbdir=debian/build/build-$(DEB_ARCH)-$(DEB_KSUBARCH)-$(DEB_KFLAVOR)

# test if we are doing a dev build, i.e., linux is in pkgs/
dev_kdir=$(PWD)/../linux-image/$(kbdir)
dev_build=$(shell test -d $(dev_kdir) && echo -n true)

# XXX simulate Build-Depends requirement.
# i.e., in the future, the build should Build-Depends on the correct version
# of the necessary kernel headers/scripts/etc. packages, in which case we
# can assume the directory will be found at a particular location. for now,
# the build host will have to be set up properly to simulate the installation
# of these packages.
host_kdir=/usr/src/linux-image/$(kbdir)
host_build=$(shell test -d $(host_kdir) && echo -n true)

ifeq ($(dev_build),true)
export KDIR=$(shell sh -c "cd $(dev_kdir) 2>/dev/null && pwd")
else
ifeq ($(host_build),true)
export KDIR=$(host_kdir)
endif
endif

ifndef KDIR
ifneq ($(MAKECMDGOALS),clean)
$(error did not find kernel build directory)
endif
else
kmajor=$(shell sed 's/^\([^-]\+\)-.*$$/\1/' $(KDIR)/version.Debian)
klocal=$(shell cat $(KDIR)/localversion)
export KVER=$(kmajor)$(klocal)
endif

export KINCLUDE_DIR=$(KDIR)/include/
PACKAGE=open-vm-tools-$(KVER)
PKGDIR=$(CURDIR)/debian/$(PACKAGE)
# the following is needed so debuild will only build the arch-specific package
# (control contains packages for multiple architectures)
export DH_OPTIONS=-p$(PACKAGE)

CFLAGS = -Wall -g

configure	 = ./configure
configure	+= --host=$(DEB_HOST_GNU_TYPE)
configure	+= --build=$(DEB_BUILD_GNU_TYPE)
configure	+= --with-kernel-release=$(KVER)
configure	+= --with-linuxdir=$(KDIR)
configure	+= --without-x
configure	+= --without-dnet
configure	+= --without-icu
configure	+= CFLAGS="$(CFLAGS)"
configure	+= LDFLAGS="-Wl,-z,defs"

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

configure: configure.ac Makefile.am
	#chmod +x debian/autogen.sh
	#debian/autogen.sh

config.status: configure
	dh_testdir
	rm -f config.cache
	$(configure)

build: build-stamp

build-stamp:  config.status
	dh_testdir
	$(MAKE)
	touch $@

clean: clean-patched
	$(MAKE) -C lib/guestRpc clean


# Clean everything up, including everything auto-generated
# at build time that needs not to be kept around in the Debian diff
clean-patched:
	dh_testdir
	dh_testroot
	#make clean
	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	$(MAKE) DESTDIR=$(PKGDIR) install

	install -D --mode=0755 open-vm-tools.init $(PKGDIR)/etc/init.d/open-vm-tools
	mkdir -p $(PKGDIR)/etc/rc2.d/ $(PKGDIR)/etc/rc3.d/
	ln -s ../init.d/open-vm-tools $(PKGDIR)/etc/rc2.d/S05open-vm-tools
	ln -s ../init.d/open-vm-tools $(PKGDIR)/etc/rc3.d/S05open-vm-tools
	install -D --mode=0644 debian/lintian $(PKGDIR)/usr/share/lintian/overrides/$(PACKAGE)
	install -D --mode=0644 debian/linda $(PKGDIR)/usr/share/linda/overrides/$(PACKAGE)

# Build architecture-independent files here.
binary-indep: build install
	rm -f debian/files
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_install
	dh_installdebconf	
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	if [ -f "../.VYATTA_DEV_BUILD" ]; then \
		dh_gencontrol -- -v999.dev; \
	else \
		dh_gencontrol; \
	fi
	dh_md5sums
	dh_builddeb

# Build architecture-dependent files here.
binary-arch: build install
# This is an architecture independent package
# so; we have nothing to do by default.

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
