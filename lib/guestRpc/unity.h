/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _UNITY_H_RPCGEN
#define _UNITY_H_RPCGEN

#include <vmxrpc.h>


#ifdef __cplusplus
extern "C" {
#endif


enum UnityOptionsVersion {
	UNITY_OPTIONS_V1 = 1,
};
typedef enum UnityOptionsVersion UnityOptionsVersion;

enum UnityFeatures {
	UNITY_ADD_HIDDEN_WINDOWS_TO_TRACKER = 1,
	UNITY_INTERLOCK_MINIMIZE_OPERATION = 2,
	UNITY_SEND_WINDOW_CONTENTS = 4,
};
typedef enum UnityFeatures UnityFeatures;

struct UnityOptionsV1 {
	int featureMask;
};
typedef struct UnityOptionsV1 UnityOptionsV1;

struct UnityOptions {
	UnityOptionsVersion ver;
	union {
		struct UnityOptionsV1 *unityOptionsV1;
	} UnityOptions_u;
};
typedef struct UnityOptions UnityOptions;

enum UnityOperationVersion {
	UNITY_OP_V1 = 1,
};
typedef enum UnityOperationVersion UnityOperationVersion;

enum UnityOperations {
	MINIMIZE = 1,
};
typedef enum UnityOperations UnityOperations;

struct UnityOperationDetails {
	UnityOperations op;
	union {
		int dummy;
	} UnityOperationDetails_u;
};
typedef struct UnityOperationDetails UnityOperationDetails;

struct UnityRequestOperationV1 {
	int sequence;
	int windowId;
	UnityOperationDetails details;
};
typedef struct UnityRequestOperationV1 UnityRequestOperationV1;

struct UnityConfirmOperationV1 {
	int sequence;
	int windowId;
	UnityOperationDetails details;
	bool_t allow;
};
typedef struct UnityConfirmOperationV1 UnityConfirmOperationV1;

struct UnityRequestOperation {
	UnityOperationVersion ver;
	union {
		struct UnityRequestOperationV1 *unityRequestOpV1;
	} UnityRequestOperation_u;
};
typedef struct UnityRequestOperation UnityRequestOperation;

struct UnityConfirmOperation {
	UnityOperationVersion ver;
	union {
		struct UnityConfirmOperationV1 *unityConfirmOpV1;
	} UnityConfirmOperation_u;
};
typedef struct UnityConfirmOperation UnityConfirmOperation;

enum UnityWindowContentsVersion {
	UNITY_WINDOW_CONTENTS_V1 = 1,
};
typedef enum UnityWindowContentsVersion UnityWindowContentsVersion;

struct UnityWindowContentsStartV1 {
	uint32 windowID;
	uint32 imageWidth;
	uint32 imageHeight;
	uint32 imageLength;
};
typedef struct UnityWindowContentsStartV1 UnityWindowContentsStartV1;

struct UnityWindowContentsEndV1 {
	uint32 windowID;
};
typedef struct UnityWindowContentsEndV1 UnityWindowContentsEndV1;
#define UNITY_WINDOW_CONTENTS_MAX_CHUNK_SIZE 49152

struct UnityWindowContentsChunkV1 {
	uint32 windowID;
	uint32 chunkID;
	struct {
		u_int data_len;
		char *data_val;
	} data;
};
typedef struct UnityWindowContentsChunkV1 UnityWindowContentsChunkV1;

struct UnityWindowContentsChunk {
	UnityWindowContentsVersion ver;
	union {
		struct UnityWindowContentsChunkV1 *chunkV1;
	} UnityWindowContentsChunk_u;
};
typedef struct UnityWindowContentsChunk UnityWindowContentsChunk;

struct UnityWindowContentsStart {
	UnityWindowContentsVersion ver;
	union {
		struct UnityWindowContentsStartV1 *startV1;
	} UnityWindowContentsStart_u;
};
typedef struct UnityWindowContentsStart UnityWindowContentsStart;

struct UnityWindowContentsEnd {
	UnityWindowContentsVersion ver;
	union {
		struct UnityWindowContentsEndV1 *endV1;
	} UnityWindowContentsEnd_u;
};
typedef struct UnityWindowContentsEnd UnityWindowContentsEnd;
#define UNITY_MAX_NUM_WINDOWS_PER_REQUEST 256

struct UnityWindowContentsRequestV1 {
	struct {
		u_int windowID_len;
		uint32 *windowID_val;
	} windowID;
};
typedef struct UnityWindowContentsRequestV1 UnityWindowContentsRequestV1;

struct UnityWindowContentsRequest {
	UnityWindowContentsVersion ver;
	union {
		struct UnityWindowContentsRequestV1 *requestV1;
	} UnityWindowContentsRequest_u;
};
typedef struct UnityWindowContentsRequest UnityWindowContentsRequest;

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_UnityOptionsVersion (XDR *, UnityOptionsVersion*);
extern  bool_t xdr_UnityFeatures (XDR *, UnityFeatures*);
extern  bool_t xdr_UnityOptionsV1 (XDR *, UnityOptionsV1*);
extern  bool_t xdr_UnityOptions (XDR *, UnityOptions*);
extern  bool_t xdr_UnityOperationVersion (XDR *, UnityOperationVersion*);
extern  bool_t xdr_UnityOperations (XDR *, UnityOperations*);
extern  bool_t xdr_UnityOperationDetails (XDR *, UnityOperationDetails*);
extern  bool_t xdr_UnityRequestOperationV1 (XDR *, UnityRequestOperationV1*);
extern  bool_t xdr_UnityConfirmOperationV1 (XDR *, UnityConfirmOperationV1*);
extern  bool_t xdr_UnityRequestOperation (XDR *, UnityRequestOperation*);
extern  bool_t xdr_UnityConfirmOperation (XDR *, UnityConfirmOperation*);
extern  bool_t xdr_UnityWindowContentsVersion (XDR *, UnityWindowContentsVersion*);
extern  bool_t xdr_UnityWindowContentsStartV1 (XDR *, UnityWindowContentsStartV1*);
extern  bool_t xdr_UnityWindowContentsEndV1 (XDR *, UnityWindowContentsEndV1*);
extern  bool_t xdr_UnityWindowContentsChunkV1 (XDR *, UnityWindowContentsChunkV1*);
extern  bool_t xdr_UnityWindowContentsChunk (XDR *, UnityWindowContentsChunk*);
extern  bool_t xdr_UnityWindowContentsStart (XDR *, UnityWindowContentsStart*);
extern  bool_t xdr_UnityWindowContentsEnd (XDR *, UnityWindowContentsEnd*);
extern  bool_t xdr_UnityWindowContentsRequestV1 (XDR *, UnityWindowContentsRequestV1*);
extern  bool_t xdr_UnityWindowContentsRequest (XDR *, UnityWindowContentsRequest*);

#else /* K&R C */
extern bool_t xdr_UnityOptionsVersion ();
extern bool_t xdr_UnityFeatures ();
extern bool_t xdr_UnityOptionsV1 ();
extern bool_t xdr_UnityOptions ();
extern bool_t xdr_UnityOperationVersion ();
extern bool_t xdr_UnityOperations ();
extern bool_t xdr_UnityOperationDetails ();
extern bool_t xdr_UnityRequestOperationV1 ();
extern bool_t xdr_UnityConfirmOperationV1 ();
extern bool_t xdr_UnityRequestOperation ();
extern bool_t xdr_UnityConfirmOperation ();
extern bool_t xdr_UnityWindowContentsVersion ();
extern bool_t xdr_UnityWindowContentsStartV1 ();
extern bool_t xdr_UnityWindowContentsEndV1 ();
extern bool_t xdr_UnityWindowContentsChunkV1 ();
extern bool_t xdr_UnityWindowContentsChunk ();
extern bool_t xdr_UnityWindowContentsStart ();
extern bool_t xdr_UnityWindowContentsEnd ();
extern bool_t xdr_UnityWindowContentsRequestV1 ();
extern bool_t xdr_UnityWindowContentsRequest ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_UNITY_H_RPCGEN */
