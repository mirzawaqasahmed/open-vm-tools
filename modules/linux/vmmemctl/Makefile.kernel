#!/usr/bin/make -f
##########################################################
# Copyright (C) 1998 VMware, Inc. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation version 2 and no later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
#
##########################################################

####
####  VMware vmballoon Makefile to be distributed externally
####

INCLUDE += -I.

EXTRA_CFLAGS := $(CC_OPTS) $(INCLUDE)
EXTRA_CFLAGS += $(call vm_check_build, $(AUTOCONF_DIR)/epoll.c,   -DVMW_HAVE_EPOLL, )
EXTRA_CFLAGS += $(call vm_check_build, $(AUTOCONF_DIR)/setnice.c, -DVMW_HAVE_SET_USER_NICE, )

obj-m += $(DRIVER).o

$(DRIVER)-y := $(subst $(SRCROOT)/, , $(patsubst %.c, %.o, $(wildcard $(SRCROOT)/*.c)))

#
# In open-vm-tools, need to compile the common sources from the lib directory.
#
ifdef OVT_SOURCE_DIR
VMMEMCTL_PATH    := $(shell cd $(SRCROOT) && pwd)
LIBBACKDOOR_PATH := $(call VMLIB_PATH,backdoor)

INCLUDE          += -I$(LIBBACKDOOR_PATH)

LIBBACKDOOR      := backdoorGcc32.o
LIBBACKDOOR      += backdoorGcc64.o

$(addprefix $(VMMEMCTL_PATH)/,$(LIBBACKDOOR)): $(VMMEMCTL_PATH)/%.o: $(LIBBACKDOOR_PATH)/%.c
	$(Q)$(rule_cc_o_c)

$(DRIVER)-y += $(LIBBACKDOOR)
endif

#
# On a 32-bit machine, strip out 64-bit backdoor code, and vice versa.
#
ifeq ($(CONFIG_X86_64),y)
$(DRIVER)-y := $(filter-out backdoorGcc32.o, $($(DRIVER)-y))
else
$(DRIVER)-y := $(filter-out backdoorGcc64.o, $($(DRIVER)-y))
endif

clean:
	rm -rf $(wildcard $(DRIVER).mod.c $(DRIVER).ko .tmp_versions \
	       Module.symvers Modules.symvers Module.markers modules.order \
	       $(foreach dir,./,$(addprefix $(dir),.*.cmd .*.o.flags *.o)))
