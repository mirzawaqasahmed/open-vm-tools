#!/usr/bin/make -f
##########################################################
# Copyright (C) 2005 VMware, Inc. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation version 2 and no later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
#
##########################################################

####
####  VMware vmci Makefile to be distributed externally
####

vm_check_build = $(shell if $(CC) $(CC_OPTS) $(INCLUDE) -Werror -S -o /dev/null -xc $(1) \
        > /dev/null 2>&1; then echo "$(2)"; else echo "$(3)"; fi)

DRIVERNAME = $(DRIVER)-$(VM_UNAME)

ifneq (,$(filter x86_64%, $(shell $(CC) -dumpmachine)))
MACHINE := x86_64
else
MACHINE := x386
endif

####
#### You must compile with at least -O level of optimization
#### or the module won't load.
#### If desparate, I think that bringing in <linux/bitops.h> might
#### suffice.
####
CC_WARNINGS := -Wall -Wstrict-prototypes
# Don't use -pipe or egcs-2.91.66 (shipped with RedHat) will die
CC_KFLAGS := -D__KERNEL__ -fno-strength-reduce -fno-omit-frame-pointer \
             -fno-common -DKBUILD_MODNAME=$(DRIVER)
CC_KFLAGS += $(call vm_check_gcc,-falign-loops=2 -falign-jumps=2 -falign-functions=2, \
	     -malign-loops=2 -malign-jumps=2 -malign-functions=2)
CC_KFLAGS += $(call vm_check_gcc,-fno-strict-aliasing,)
CC_KFLAGS += -DVMX86_TOOLS
ifeq ($(MACHINE),x86_64)
CC_KFLAGS += -mno-red-zone -mcmodel=kernel
else
# Gcc 3.0 deprecates -m486 --hpreg
CC_KFLAGS += -DCPU=586 $(call check_gcc,-march=i586,-m486)
endif

CC_OPTS := -g3 -O2 -DMODULE $(GLOBAL_DEFS) $(CC_KFLAGS) $(CC_WARNINGS)

INCLUDE += -I. -I$(HEADER_DIR)

INCLUDE += $(shell $(CC) $(CC_OPTS) $(INCLUDE) \
	   -E $(AUTOCONF_DIR)/geninclude.c \
	   | sed -n -e 's!^APATH!-I$(HEADER_DIR)/asm!p')

CC_OPTS += $(call vm_check_build, $(AUTOCONF_DIR)/epoll.c, -DVMW_HAVE_EPOLL, )

OBJS := vmci_drv.o
OBJS += vmciDatagram.o
OBJS += vmciEvent.o
OBJS += vmciProcess.o
OBJS += vmciUtil.o
OBJS += vmciKernelIf.o
OBJS += vmciGuestKernelIf.o
OBJS += vmciQueuePair.o
OBJS += kernelStubsLinux.o
OBJS += vmciGuestDs.o

CFLAGS := $(CC_OPTS) $(INCLUDE)

LIBS :=

default: all

#
# In open-vm-tools, need to compile the common sources from the lib directory.
#
ifdef OVT_SOURCE_DIR
kernelStubsLinux.o: $(OVT_SOURCE_DIR)/modules/linux/shared/kernelStubsLinux.c
	$(CC) $(CC_OPTS) $(INCLUDE) -c $<
else
kernelStubsLinux.o: shared/kernelStubsLinux.c
	$(CC) $(CC_OPTS) $(INCLUDE) -c $<
endif

all: $(DRIVER).o

$(DRIVERNAME): $(OBJS)
	$(LD) -r -o $@ $^

$(DRIVER) $(DRIVER).o ../$(DRIVER).o: $(DRIVERNAME)
	cp -f $< $@

auto-build: ../$(DRIVER).o

clean:
	rm -f $(DRIVERNAME) ../$(DRIVERNAME) $(DRIVER) $(OBJS)

.SILENT:
